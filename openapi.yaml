openapi: 3.0.0
info:
  title: TradeOn API
  version: 1.0.0
  description: 'TradeOn은 사용자 간 물물교환 기반의 중고 거래 플랫폼입니다.


    이 API 문서는 다음과 같은 기능들을 포함합니다:

    - 사용자 회원가입, 로그인 및 정보 조회

    - 교환 요청 및 거래 이력 관리

    - 사용자 리뷰 시스템

    - 가치 평가 게시판

    - 하이브리드 검색기능

    - 게시물 등록/삭제/조회

    - 채팅 및 거래 약속

    - 거래 데이터 분석 및 시각화


    JWT 인증이 필요한 API의 경우 Authorize 버튼을 통해 토큰을 입력해주세요.'
servers:
- url: http://localhost:5000
  description: 로컬
tags:
- name: User
  description: 사용자 정보 및 인증
- name: Trade
  description: 거래 처리 기능
- name: Post
  description: 게시물 등록 및 조회
- name: Chat
  description: 실시간 채팅 및 거래 약속
- name: Valuation
  description: 가치 평가 및 의견 등록
- name: Analytic
  description: 거래 및 사용자 활동 통계
- name: Search
  description: 키워드 기반 게시물 검색
paths:
  /api/v1/users/register:
    post:
      tags:
        - User
      summary: 사용자 회원가입
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegisterRequest'
      responses:
        '201':
          description: 회원가입 완료
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: 회원가입 완료
        '400':
          description: 필수 입력 항목 누락
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: 이미 존재하는 사용자
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/users/login:
    post:
      tags:
        - User
      summary: 사용자 로그인
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
      responses:
        '200':
          description: 로그인 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginResponse'
        '401':
          description: 로그인 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/users/logout:
    post:
      tags:
        - User
      summary: 사용자 로그아웃
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 로그아웃 처리 완료
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: User logged out (토큰 클라이언트에서 제거 필요)

  /api/v1/users/{userid}/profile:
    get:
      tags:
        - User
      summary: 사용자 프로필 조회
      parameters:
        - name: userid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 프로필 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileResponse'
        '404':
          description: 사용자 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/users/{userid}/reviews:
    get:
      tags:
        - User
      summary: 사용자 리뷰 조회
      parameters:
        - name: userid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 리뷰 리스트 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserReview'

  /api/v1/users/{userid}/trades:
    get:
      tags:
        - User
      summary: 사용자 거래 내역 조회
      parameters:
        - name: userid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 거래 목록 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserTrade'

  /api/v1/users/{userid}/points:
    patch:
      tags:
        - User
      summary: 사용자 포인트 수정
      security:
        - bearerAuth: []
      parameters:
        - name: userid
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPointsUpdateRequest'
      responses:
        '200':
          description: 포인트 수정 성공
        '400':
          description: 필드 누락
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 권한 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 사용자 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/users/{userid}/grade:
    get:
      tags:
        - User
      summary: 사용자 등급 조회
      parameters:
        - name: userid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 등급 정보 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGradeResponse'
        '404':
          description: 사용자 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/users/{userid}:
    delete:
      tags:
        - User
      summary: 사용자 탈퇴
      security:
        - bearerAuth: []
      parameters:
        - name: userid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 탈퇴 완료
        '403':
          description: 권한 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 사용자 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  paths:
  /api/v1/trades/{tradeid}/accept:
    post:
      tags:
        - Trade
      summary: 거래 수락
      description: 요청된 거래 제안을 수락합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: tradeid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 거래 수락 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Trade accepted successfully.
        '403':
          description: 권한 없음 (요청자만 수락 가능)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 거래 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/trades/{tradeid}/complete:
    post:
      tags:
        - Trade
      summary: 거래 완료 처리
      description: 요청자 또는 수락자가 거래를 완료 처리하고 완료 상태를 기록합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: tradeid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 거래 완료됨
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: COMPLETED
        '403':
          description: 권한 없음 (요청자 또는 수락자만 처리 가능)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 거래 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/trades/{tradeid}/review:
    post:
      tags:
        - Trade
      summary: 거래 리뷰 작성
      description: 완료된 거래에 대해 평점과 코멘트를 작성합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: tradeid
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TradeReviewRequest'
      responses:
        '200':
          description: 리뷰 등록 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  review_id:
                    type: integer
                    example: 101
        '400':
          description: 잘못된 입력 (rating 또는 comment 누락)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 권한 없음 (거래 참여자만 작성 가능)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 거래 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  paths:
  /api/v1/posts:
    post:
      tags:
        - Post
      summary: 게시글 등록
      description: 인증된 사용자가 새 게시글을 등록합니다.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCreateRequest'
      responses:
        '201':
          description: 게시글 등록 완료
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: 게시글 등록 완료
                  post_id:
                    type: integer
                    example: 101
        '400':
          description: 필수 입력 항목 누락 또는 유효성 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 인증 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    get:
      tags:
        - Post
      summary: 게시글 목록 조회
      description: 인증된 사용자가 카테고리 필터 및 페이지네이션으로 게시글 목록을 조회합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: category
          in: query
          description: 필터할 카테고리 (선택)
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: 페이지 번호 (기본값 1)
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: 페이지당 항목 수 (기본값 10)
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: 게시글 목록 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  page:
                    type: integer
                  per_page:
                    type: integer
                  posts:
                    type: array
                    items:
                      $ref: '#/components/schemas/PostResponse'

  /api/v1/posts/{postid}:
    get:
      tags:
        - Post
      summary: 게시글 상세 조회
      description: 인증된 사용자가 특정 게시글의 상세 정보를 조회합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: postid
          in: path
          description: 조회할 게시글 ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 게시글 상세 정보 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResponse'
        '404':
          description: 게시글을 찾을 수 없습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      tags:
        - Post
      summary: 게시글 수정
      description: 작성자만 자신의 게시글을 수정할 수 있습니다.
      security:
        - bearerAuth: []
      parameters:
        - name: postid
          in: path
          description: 수정할 게시글 ID
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUpdateRequest'
      responses:
        '200':
          description: 게시글 수정 완료
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: 게시글 수정 완료
        '403':
          description: 수정 권한이 없습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 게시글을 찾을 수 없습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - Post
      summary: 게시글 삭제
      description: 작성자만 자신의 게시글을 삭제할 수 있습니다.
      security:
        - bearerAuth: []
      parameters:
        - name: postid
          in: path
          description: 삭제할 게시글 ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 게시글 삭제 완료
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: 게시글 삭제 완료
        '403':
          description: 삭제 권한이 없습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 게시글을 찾을 수 없습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  paths:
  /api/v1/chatrooms:
    get:
      tags:
        - Chat
      summary: 채팅방 목록 조회
      description: 인증된 사용자의 참여 중인 채팅방 목록을 최신순으로 반환합니다.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 채팅방 목록 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Chatroom'
    post:
      tags:
        - Chat
      summary: 채팅방 생성
      description: 인증된 사용자가 새로운 채팅방을 생성합니다.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatroomCreateRequest'
      responses:
        '201':
          description: 채팅방 생성 완료
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chatroom'

  /api/v1/chatrooms/{chatroomId}:
    get:
      tags:
        - Chat
      summary: 채팅방 상세 조회
      description: 특정 채팅방의 상세 정보를 반환합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: chatroomId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 채팅방 상세 정보 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chatroom'
        '404':
          description: 채팅방 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/chatrooms/{chatroomId}/messages:
    get:
      tags:
        - Chat
      summary: 메시지 목록 조회
      description: 특정 채팅방의 메시지 내역을 조회합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: chatroomId
          in: path
          required: true
          schema:
            type: integer
        - name: limit
          in: query
          description: 반환할 메시지 개수 (기본값 50)
          required: false
          schema:
            type: integer
        - name: before
          in: query
          description: 이 ISO8601 타임스탬프 이전 메시지만 조회
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: 메시지 리스트 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChatMessage'
        '404':
          description: 채팅방 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - Chat
      summary: 메시지 전송
      description: 특정 채팅방에 메시지를 전송합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: chatroomId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatMessageSendRequest'
      responses:
        '201':
          description: 메시지 전송 완료
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMessage'
        '400':
          description: 메시지 내용 누락
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 채팅방 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/chatrooms/trade-promise:
    post:
      tags:
        - Chat
      summary: 교환 약속 등록
      description: 특정 채팅방에 교환 약속을 등록합니다.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TradePromiseRequest'
      responses:
        '201':
          description: 약속 등록 완료
        '400':
          description: 필드 누락
        '404':
          description: 채팅방 없음
  paths:
  /api/v1/valuation/posts:
    get:
      tags:
        - Valuation
      summary: 가치 평가 게시글 목록 조회
      description: 인증된 사용자의 가치 평가 게시글을 페이지네이션하여 최신순으로 조회합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: 페이지 번호 (기본값 1)
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: 페이지당 게시글 수 (기본값 10)
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: 게시글 목록 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  page:
                    type: integer
                  per_page:
                    type: integer
                  posts:
                    type: array
                    items:
                      $ref: '#/components/schemas/ValuationPost'
        '401':
          description: 인증 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      tags:
        - Valuation
      summary: 가치 평가 게시글 작성
      description: 인증된 사용자가 새 가치 평가 게시글을 등록합니다.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValuationPostCreateRequest'
      responses:
        '201':
          description: 게시글 생성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValuationPost'
        '400':
          description: 필수 입력 항목 누락 또는 유효성 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 인증 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/valuation/posts/{postid}:
    get:
      tags:
        - Valuation
      summary: 가치 평가 게시글 상세 조회
      description: 특정 게시글의 상세 정보를 조회합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: postid
          in: path
          description: 조회할 게시글 ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 게시글 상세 정보 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValuationPost'
        '401':
          description: 인증 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 게시글을 찾을 수 없습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - Valuation
      summary: 가치 평가 게시글 삭제
      description: 작성자만 자신의 가치 평가 게시글을 삭제할 수 있습니다.
      security:
        - bearerAuth: []
      parameters:
        - name: postid
          in: path
          description: 삭제할 게시글 ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 게시글 삭제 성공
        '403':
          description: 권한 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 게시글을 찾을 수 없습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/valuation/posts/{postid}/opinions:
    post:
      tags:
        - Valuation
      summary: 평가 의견 등록
      description: 특정 게시글에 대한 가격 의견을 등록합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: postid
          in: path
          description: 평가할 게시글 ID
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValuationOpinionCreateRequest'
      responses:
        '201':
          description: 의견 등록 성공
        '400':
          description: 필수 입력 항목 누락 또는 유효성 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 인증 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 게시글을 찾을 수 없습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  paths:
  /api/v1/analytics/trade-stats:
    get:
      tags:
        - Analytic
      summary: 전체 거래 통계 조회
      description: 가입 이후 사용자의 전체 거래 건수 및 상태별 통계를 반환합니다.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 거래 통계 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradeStatsResponse'
        '401':
          description: 인증 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/analytics/user/{userid}/activity:
    get:
      tags:
        - Analytic
      summary: 특정 유저 활동 통계 조회
      description: 해당 사용자의 거래, 게시글, 리뷰 등 주요 활동 통계를 반환합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: userid
          in: path
          description: 통계를 조회할 사용자 ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 유저 활동 통계 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserActivityStats'
        '401':
          description: 인증 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 사용자 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  paths:
  /api/v1/search:
    get:
      tags:
        - Search
      summary: 게시글 키워드 검색
      description: |
        title 및 category 파라미터를 AND 조건으로 검색합니다.  
        두 파라미터 중 하나는 필수이며, 둘 다 없으면 400 에러를 반환합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: title
          in: query
          required: false
          schema:
            type: string
          description: 검색할 게시글 제목 키워드
        - name: category
          in: query
          required: false
          schema:
            type: string
          description: 검색할 카테고리
      responses:
        '400':
          description: title 또는 category 파라미터가 필요합니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: 검색 결과 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  count:
                    type: integer
                  posts:
                    type: array
                    items:
                      $ref: '#/components/schemas/SearchPostItem'
components:
  schemas:
    UserRegisterRequest:
      type: object
      required:
        - username
        - email
        - password
      properties:
        username:
          type: string
          example: user123
        email:
          type: string
          example: user@example.com
        password:
          type: string
          example: password123

    UserLoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          example: user123
        password:
          type: string
          example: password123

    UserLoginResponse:
      type: object
      properties:
        access_token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        user:
          type: object
          properties:
            id:
              type: integer
              example: 1
            username:
              type: string
              example: user123
            email:
              type: string
              example: user@example.com

    UserProfileResponse:
      type: object
      properties:
        id:
          type: integer
          example: 1
        username:
          type: string
          example: user123
        email:
          type: string
          example: user@example.com
        image:
          type: string
          example: https://example.com/profile.png

    UserReview:
      type: object
      properties:
        id:
          type: integer
        reviewer:
          type: string
        rating:
          type: integer
        comment:
          type: string

    UserTrade:
      type: object
      properties:
        trade_id:
          type: integer
        partner_id:
          type: integer
        status:
          type: string

    UserPointsUpdateRequest:
      type: object
      required:
        - amount
      properties:
        amount:
          type: integer
          example: 150

    UserGradeResponse:
      type: object
      properties:
        grade:
          type: string
          example: Gold
        points:
          type: integer
          example: 1250

    TradeReviewRequest:
      type: object
      required:
        - rating
        - comment
      properties:
        rating:
          type: integer
          minimum: 1
          maximum: 5
          example: 4
        comment:
          type: string
          example: 거래가 원활했습니다. 감사합니다.

    PostCreateRequest:
      type: object
      required:
        - title
        - description
        - category
      properties:
        title:
          type: string
          example: MacBook Pro 2020 판매
        description:
          type: string
          example: 거의 새 제품이며 구성품 모두 포함되어 있습니다.
        category:
          type: string
          example: 전자기기
        thumbnail_image_url:
          type: string
          example: https://example.com/macbook.jpg

    PostResponse:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        category:
          type: string
        author_id:
          type: integer
        created_at:
          type: string
          format: date-time

    Chatroom:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        participants:
          type: array
          items:
            type: integer
        related_post_id:
          type: integer
        last_message:
          type: string

    ChatroomCreateRequest:
      type: object
      required:
        - name
        - participant_ids
      properties:
        name:
          type: string
        participant_ids:
          type: array
          items:
            type: integer
        related_post_id:
          type: integer

    ChatMessage:
      type: object
      properties:
        id:
          type: integer
        chatroom_id:
          type: integer
        sender_id:
          type: integer
        content:
          type: string
        timestamp:
          type: string
          format: date-time

    ChatMessageSendRequest:
      type: object
      required:
        - sender_id
        - content
      properties:
        sender_id:
          type: integer
        content:
          type: string

    TradePromiseRequest:
      type: object
      required:
        - title
        - location
        - date
        - chatroom_id
      properties:
        title:
          type: string
        location:
          type: string
        date:
          type: string
          format: date-time
        chatroom_id:
          type: integer

    ValuationPost:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        owner_id:
          type: integer
        created_at:
          type: string
          format: date-time

    ValuationPostCreateRequest:
      type: object
      required:
        - title
        - description
      properties:
        title:
          type: string
          example: 이 기타의 가치는 어느 정도일까요?
        description:
          type: string
          example: Fender 기타, 거의 새 제품입니다.

    ValuationOpinionCreateRequest:
      type: object
      required:
        - price
      properties:
        price:
          type: integer
          example: 600000

    TradeStatsResponse:
      type: object
      properties:
        total_trades:
          type: integer
          example: 1450
        completed_trades:
          type: integer
          example: 1320
        average_rating:
          type: number
          format: float
          example: 4.3

    UserActivityStats:
      type: object
      properties:
        user_id:
          type: integer
        trades_completed:
          type: integer
        reviews_written:
          type: integer
        points_earned:
          type: integer

    SearchResultPost:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        category:
          type: string
        created_at:
          type: string
          format: date-time

    ErrorResponse:
      type: object
      properties:
        msg:
          type: string
          example: 오류 메시지입니다.

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []
