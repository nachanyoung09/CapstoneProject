openapi: 3.0.0
info:
  title: TradeOn API
  version: 1.0.0
  description: 'TradeOn은 사용자 간 물물교환 기반의 중고 거래 플랫폼입니다.


    이 API 문서는 다음과 같은 기능들을 포함합니다:

    - 사용자 회원가입, 로그인 및 정보 조회

    - 교환 요청 및 거래 이력 관리

    - 사용자 리뷰 시스템

    - 가치 평가 게시판

    - 하이브리드 검색기능

    - 게시물 등록/삭제/조회

    - 채팅 및 거래 약속

    - 거래 데이터 분석 및 시각화


    JWT 인증이 필요한 API의 경우 Authorize 버튼을 통해 토큰을 입력해주세요.'
servers:
- url: https://673e-121-140-48-141.ngrok-free.app
  description: 로컬
tags:
- name: User
  description: 사용자 정보 및 인증
- name: Trade
  description: 거래 처리 기능
- name: Post
  description: 게시물 등록 및 조회
- name: Chat
  description: 실시간 채팅 및 거래 약속
- name: Valuation
  description: 가치 평가 및 의견 등록
- name: Analytic
  description: 거래 및 사용자 활동 통계
- name: Search
  description: 키워드 기반 게시물 검색
paths:
  /api/v1/users/register:
    post:
      tags:
        - User
      summary: 사용자 회원가입 (id=userid)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegisterRequest'
      responses:
        '201':
          description: 회원가입 완료
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: 회원가입 완료
        '400':
          description: 필수 입력 항목 누락
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: 이미 존재하는 사용자
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/users/login:
    post:
      tags:
        - User
      summary: 사용자 로그인
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
      responses:
        '200':
          description: 로그인 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginResponse'
        '401':
          description: 로그인 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/users/logout:
    post:
      tags:
        - User
      summary: 사용자 로그아웃 (ex.localStorage.removeItem('access_token') 등으로 클라이언트에서 토큰 제거해야함 )
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 로그아웃 처리 완료
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: User logged out (토큰 클라이언트에서 제거 필요)

  /api/v1/users/{userid}/profile:
    get:
      tags:
        - User
      summary: 사용자 프로필 조회 ((userid(int)입력))
      parameters:
        - name: userid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 프로필 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileResponse'
        '404':
          description: 사용자 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/users/{userid}/reviews:
    get:
      tags:
        - User
      summary: 사용자 리뷰 조회 (userid(int)입력)
      parameters:
        - name: userid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 리뷰 리스트 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserReview'

  /api/v1/users/{userid}/trades:
    get:
      tags:
        - User
      summary: 사용자 거래 내역 조회 (userid(int) 입력)
      parameters:
        - name: userid
          in: path
          required: true
          schema:
            type: integer
          description: 조회할 사용자 ID
      responses:
        "200":
          description: 거래 목록 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserTrade'
        "401":
          description: 인증 필요 또는 인증 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: 사용자가 없거나 거래 내역이 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/users/{userid}/points:
    patch:
      tags:
        - User
      summary: 사용자 포인트 수정 ('amount 값 1~50 제한')
      security:
        - bearerAuth: []
      parameters:
        - name: userid
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPointsUpdateRequest'
      responses:
        '200':
          description: 포인트 수정 성공
        '400':
          description: 필드 누락
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 권한 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 사용자 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/users/{userid}/grade:
    get:
      tags:
        - User
      summary: 사용자 등급 조회
      parameters:
        - name: userid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 등급 정보 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGradeResponse'
        '404':
          description: 사용자 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/users/{userid}:
    delete:
      tags:
        - User
      summary: 사용자 탈퇴
      security:
        - bearerAuth: []
      parameters:
        - name: userid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 탈퇴 완료
        '403':
          description: 권한 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 사용자 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/trades:
    post:
      tags:
        - Trade
      summary: 거래 제안 생성
      description: |
        채팅 페이지에서 거래 약속이 성사된 후 호출합니다.
        요청자(requester)가 post_id와 receiver_id를 전달하면 새로운 거래 제안이 생성됩니다.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TradeCreateRequest"
      responses:
        "201":
          description: 거래 제안 생성 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TradeCreateResponse"
        "400":
          description: 필수 입력 항목 누락 또는 자신에게 거래 제안 시도
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: 인증 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  # ──[2] POST /api/v1/trades/{tradeid}/accept ─────────────────────────────────────
  /api/v1/trades/{tradeid}/accept:
    post:
      tags:
        - Trade
      summary: 거래 수락
      description: |
        PENDING 상태의 거래 제안을 수락합니다.
        수락자(receiver)만 호출할 수 있습니다.
      security:
        - bearerAuth: []
      parameters:
        - name: tradeid
          in: path
          description: 수락할 거래 제안 ID
          required: true
          schema:
            type: integer
            example: 45
      responses:
        "200":
          description: 거래 수락 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success_tradeMessageResponse"
        "400":
          description: 현재 상태에서 수락 불가
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: 인증 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: 권한 없음 (receiver만 수락 가능)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: 거래 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  # ──[3] POST /api/v1/trades/{tradeid}/complete ──────────────────────────────────
  /api/v1/trades/{tradeid}/complete:
    post:
      tags:
        - Trade
      summary: 거래 완료 처리
      description: |
        ACCEPTED 상태의 거래를 완료 처리하고 상태를 COMPLETED로 변경합니다.
        거래 참여자(requester 또는 receiver)만 호출할 수 있습니다.
      security:
        - bearerAuth: []
      parameters:
        - name: tradeid
          in: path
          description: 완료 처리할 거래 ID
          required: true
          schema:
            type: integer
            example: 45
      responses:
        "200":
          description: 거래 완료됨
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TradeCompleteResponse"
        "400":
          description: 현재 상태에서 완료 불가
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: 인증 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: 권한 없음 (참여자만 처리 가능)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: 거래 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  # ──[4] POST /api/v1/trades/{tradeid}/review ────────────────────────────────────
  /api/v1/trades/{tradeid}/review:
    post:
      tags:
        - Trade
      summary: 거래 리뷰 작성
      description: |
        COMPLETED 상태의 거래에 대해 평점(rating)과 코멘트(comment)를 작성합니다.
        거래 참여자만 호출할 수 있습니다.
      security:
        - bearerAuth: []
      parameters:
        - name: tradeid
          in: path
          description: 리뷰 작성할 거래 ID
          required: true
          schema:
            type: integer
            example: 45
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TradeReviewRequest"
      responses:
        "200":
          description: 리뷰 등록 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TradeReviewResponse"
        "400":
          description: 잘못된 입력 (rating 또는 comment 누락) 또는 거래 상태 불일치
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: 인증 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: 권한 없음 (거래 참여자만 작성 가능)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: 거래 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  
  /api/v1/posts:
    post:
      tags:
        - Post
      summary: 게시글 등록
      description: 인증된 사용자가 새 게시글을 등록합니다.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCreateRequest'
      responses:
        '201':
          description: 게시글 등록 완료
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: 게시글 등록 완료
                  post_id:
                    type: integer
                    example: 101
        '400':
          description: 필수 입력 항목 누락 또는 유효성 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 인증 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    get:
      tags:
        - Post
      summary: 게시글 목록 조회
      description: 인증된 사용자가 카테고리 필터 및 페이지네이션으로 게시글 목록을 조회합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: category
          in: query
          description: 필터할 카테고리 (선택)
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: 페이지 번호 (빈칸시 기본값 1,최대 500 )
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: 페이지당 항목 수 (빈칸시 기본값 10,최대50)
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: 게시글 목록 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  page:
                    type: integer
                  per_page:
                    type: integer
                  posts:
                    type: array
                    items:
                      $ref: '#/components/schemas/PostResponse'

  /api/v1/posts/{postid}:
    get:
      tags:
        - Post
      summary: 게시글 상세 조회
      description: 인증된 사용자가 특정 게시글의 상세 정보를 조회합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: postid
          in: path
          description: 조회할 게시글 ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 게시글 상세 정보 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResponse'
        '404':
          description: 게시글을 찾을 수 없습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


    put:
      tags:
        - Post
      summary: 게시글 수정
      description: 작성자만 자신의 게시글을 수정할 수 있습니다.
      security:
        - bearerAuth: []
      parameters:
        - name: postid
          in: path
          description: 수정할 게시글 ID
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUpdateRequest'
      responses:
        '200':
          description: 게시글 수정 완료
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: 게시글 수정 완료
        '403':
          description: 수정 권한이 없습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 게시글을 찾을 수 없습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - Post
      summary: 게시글 삭제
      description: 작성자만 자신의 게시글을 삭제할 수 있습니다.
      security:
        - bearerAuth: []
      parameters:
        - name: postid
          in: path
          description: 삭제할 게시글 ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 게시글 삭제 완료
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: 게시글 삭제 완료
        '403':
          description: 삭제 권한이 없습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 게시글을 찾을 수 없습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/posts/me:
    get:
      tags:
        - Post
      summary: 나의 게시글 목록 조회
      description: 로그인한 사용자가 작성한 게시글 목록을 조회합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: category
          in: query
          description: 필터할 카테고리 (선택)
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: 페이지 번호 (빈칸시 기본값 1)
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
            maximum: 1000
        - name: per_page
          in: query
          description: 페이지당 항목 수 (빈칸시 기본값 10)
          required: false
          schema:
            type: integer
            default: 10
            maximum: 50
      responses:
        '200':
          description: 게시글 목록 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  page:
                    type: integer
                  per_page:
                    type: integer
                  posts:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        title:
                          type: string
                        description:
                          type: string
                        category:
                          type: string
                        thumbnail_image_url:
                          type: string
                        user_id:
                          type: integer
                        created_at:
                          type: string
        '401':
          description: 인증 실패
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/chatrooms:
    get:
      tags:
        - Chat
      summary: 채팅방 목록 조회
      description: 인증된 사용자의 참여 중인 채팅방 목록을 최신순으로 반환합니다.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 채팅방 목록 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Chatroom'
    post:
      tags:
        - Chat
      summary: 채팅방 생성
      description: 인증된 사용자가 새로운 채팅방을 생성합니다.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatroomCreateRequest'
      responses:
        '201':
          description: 채팅방 생성 완료
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chatroom'

  /api/v1/chatrooms/{chatroomId}/info:
    get:
      tags:
        - Chat
      summary: 채팅방 상세 조회
      description: 특정 채팅방의 상세 정보를 반환합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: chatroomId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 채팅방 상세 정보 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chatroom'
        '404':
          description: 채팅방 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/chatrooms/{chatroomId}/messages:
    get:
      tags:
        - Chat
      summary: 메시지 목록 조회
      description: 특정 채팅방의 메시지 내역을 조회합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: chatroomId
          in: path
          required: true
          schema:
            type: integer
        - name: limit
          in: query
          description: 반환할 메시지 개수 (기본값 50)
          required: false
          schema:
            type: integer
        - name: before
          in: query
          description: 이 ISO8601 타임스탬프 이전 메시지만 조회
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: 메시지 리스트 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChatMessage'
        '404':
          description: 채팅방 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - Chat
      summary: 메시지 전송
      description: 특정 채팅방에 메시지를 전송합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: chatroomId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatMessageSendRequest'
      responses:
        '201':
          description: 메시지 전송 완료
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMessage'
        '400':
          description: 메시지 내용 누락
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 채팅방 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/chatrooms/trade-promise:
    post:
      tags:
        - Chat
      summary: 교환 약속 등록
      description: 특정 채팅방에 교환 약속을 등록합니다. 등록 완료되면 거래 생성을 요청합니다.->/api/v1/trades
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TradePromiseRequest'
      responses:
        '201':
          description: 약속 등록 완료
        '400':
          description: 필드 누락
        '404':
          description: 채팅방 없음
 
  /api/v1/valuations:
    get:
      tags:
        - Valuation
      summary: 가치 평가 게시글 목록 조회
      description: 인증된 사용자의 가치 평가 게시글을 페이지네이션 및 카테고리 필터를 통해 최신순으로 조회합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: 페이지 번호 (기본값 1)
          required: false
          schema:
            type: integer
            example: 1
        - name: per_page
          in: query
          description: 페이지당 게시글 수 (기본값 10)
          required: false
          schema:
            type: integer
            example: 10
        - name: category
          in: query
          description: 카테고리 필터 (예시-> 전자기기, 패션 등)
          required: false
          schema:
            type: string
            example: 전자기기
      responses:
        "200":
          description: 게시글 목록 반환
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValuationPostListResponse"
        "401":
          description: 인증 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"


  
    post:
      tags:
        - Valuation
      summary: 가치 평가 게시글 작성
      description: 인증된 사용자가 새 가치 평가 게시글을 등록합니다.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ValuationPostCreateRequest"
      responses:
        "201":
          description: 게시글 생성 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValuationPostDetail"
        "400":
          description: 필수 입력 항목 누락 또는 유효성 오류
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: 인증 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  # ──[3] GET /api/v1/valuations/{postid} ──────────────────────────────────────────────
  /api/v1/valuations/{postid}:
    get:
      tags:
        - Valuation
      summary: 가치 평가 게시글 상세 조회
      description: 특정 게시글의 상세 정보를 조회합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: postid
          in: path
          description: 조회할 게시글 ID
          required: true
          schema:
            type: integer
            example: 123
      responses:
        "200":
          description: 게시글 상세 정보 반환
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValuationPostDetail"
        "401":
          description: 인증 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: 게시글을 찾을 수 없습니다.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    delete:
      tags:
        - Valuation
      summary: 가치 평가 게시글 삭제
      description: 작성자만 자신의 가치 평가 게시글을 삭제할 수 있습니다.
      security:
        - bearerAuth: []
      parameters:
        - name: postid
          in: path
          description: 삭제할 게시글 ID
          required: true
          schema:
            type: integer
            example: 123
      responses:
        "200":
          description: 게시글 삭제 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessMessageResponse"
        "401":
          description: 인증 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: 권한 없음 (작성자 아님)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: 게시글을 찾을 수 없습니다.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  # ──[4] POST /api/v1/valuations/{postid}/price ─────────────────────────────────────
  /api/v1/valuations/{postid}/price:
    post:
      tags:
        - Valuation
      summary: 평가 의견 등록
      description: 특정 게시글에 대한 가격 의견을 등록합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: postid
          in: path
          description: 평가할 게시글 ID
          required: true
          schema:
            type: integer
            example: 123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ValuationOpinionCreateRequest"
      responses:
        "201":
          description: 의견 등록 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessMessageResponse"
        "400":
          description: 필수 입력 항목 누락 또는 유효성 오류
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: 인증 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: 게시글을 찾을 수 없습니다.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  # ──[5] GET /api/v1/valuations/{postid}/average ────────────────────────────────────
  /api/v1/valuations/{postid}/average:
    get:
      tags:
        - Valuation
      summary: 게시글의 평균 가격 조회
      description: 특정 가치 평가 게시글에 대한 유효한 의견들의 평균 가격과 개수를 반환합니다. JWT 인증 필요.
      security:
        - bearerAuth: []
      parameters:
        - name: postid
          in: path
          description: 평균 가격을 조회할 게시글 ID
          required: true
          schema:
            type: integer
            example: 123
      responses:
        "200":
          description: 평균 가격 조회 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValuationAverageResponse"
        "401":
          description: 인증 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: 게시글을 찾을 수 없습니다.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  
  /api/v1/analytics/user/{userid}:
    get:
      tags:
        - Analytic
      summary: 특정 사용자 거래 및 평점 통계 조회
      description: |
        지정된 userId를 가진 사용자의 총 거래 건수, 성공 거래 건수, 성공률, 평균 평점,
        월별 완료된 거래 건수 및 월별 평균 평점을 조회하고 결과를 DB에 저장하거나 업데이트합니다.
        JWT 인증이 필요합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: userid
          in: path
          required: true
          description: 통계를 조회할 사용자 ID
          schema:
            type: integer
            example: 42
      responses:
        "200":
          description: 통계 조회 및 업데이트 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsResponse'
        "401":
          description: 인증되지 않음 또는 토큰이 유효하지 않음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: 사용자 또는 거래 내역이 존재하지 않음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  
    put:
      tags:
        - Analytic
      summary: 특정 사용자 거래 데이터 수동 업데이트
      description: |
        지정된 userId를 가진 사용자의 총 거래 건수, 성공 거래 건수, 평균 평점을
        요청 바디에 포함된 값으로 수동 업데이트합니다. 성공률은 자동 계산되어 저장됩니다.
        JWT 인증이 필요합니다.-> 관리자용이므로 실제 구현할 필요없다고 판단
      security:
        - bearerAuth: []
      parameters:
        - name: userid
          in: path
          required: true
          description: 업데이트할 사용자 ID
          schema:
            type: integer
            example: 42
      requestBody:
        description: 수동으로 업데이트할 거래 데이터 값
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAnalyticsRequest'
      responses:
        "200":
          description: 거래 데이터 수동 업데이트 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAnalyticsResponse'
        "400":
          description: 잘못된 요청 (필수 필드 누락 등)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: 인증되지 않음 또는 토큰이 유효하지 않음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: 사용자 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
 
  /api/v1/search:
    get:
      tags:
        - Search
      summary: 게시글 키워드 검색
      description: |
        title 및 category 파라미터를 AND 조건으로 검색합니다.  
        두 파라미터 중 하나는 필수이며, 둘 다 없으면 400 에러를 반환합니다.
      security:
        - bearerAuth: []
      parameters:
        - name: title
          in: query
          required: false
          schema:
            type: string
          description: 검색할 게시글 제목 키워드
        - name: category
          in: query
          required: false
          schema:
            type: string
          description: 검색할 카테고리
      responses:
        '400':
          description: title 또는 category 파라미터가 필요합니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: 검색 결과 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  count:
                    type: integer
                  posts:
                    type: array
                    items:
                      $ref: '#/components/schemas/SearchPostItem'
  /api/v1/search/advanced:
    get:
      tags:
        - Search
      summary: 제목 기반 고급 게시글 검색
      description: 입력한 제목(title)을 기반으로 하이브리드 검색을 수행하여 유사 게시글을 반환합니다.
      parameters:
        - name: title
          in: query
          required: true
          description: 검색할 게시글 제목
          schema:
            type: string
            example: 에어팟 프로 중고 팝니다
      responses:
        '200':
          description: 검색 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedSearchResponse'
        '400':
          description: 잘못된 요청 (title 없음)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    UserRegisterRequest:
      type: object
      required:
        - username
        - email
        - password
      properties:
        username:
          type: string
          example: user123
        email:
          type: string
          example: user@example.com
        password:
          type: string
          example: password123

    UserLoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          example: user123
        password:
          type: string
          example: password123

    UserLoginResponse:
      type: object
      properties:
        access_token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        user:
          type: object
          properties:
            id:
              type: integer
              example: 1
            username:
              type: string
              example: user123
            email:
              type: string
              example: user@example.com

    UserProfileResponse:
      type: object
      properties:
        id:
          type: integer
          example: 1
        username:
          type: string
          example: user123
        email:
          type: string
          example: user@example.com
        image:
          type: string
          example: https://example.com/profile.png

    UserReview:
      type: object
      properties:
        id:
          type: integer
        reviewer:
          type: string
        rating:
          type: integer
        comment:
          type: string

    UserTrade:
      type: object
      properties:
        tradeId:
          type: integer
          description: 거래 ID
          example: 123
        postId:
          type: integer
          description: 거래된 게시글 ID
          example: 456
        postTitle:
          type: string
          description: 거래된 게시글 제목
          example: "중고 노트북 팝니다"
        counterpartId:
          type: integer
          description: 거래 상대방 사용자 ID
          example: 789
        status:
          type: string
          description: 거래 상태 (PENDING, ACCEPTED, COMPLETED 중 하나)
          example: "COMPLETED"
        createdAt:
          type: string
          format: date-time
          description: 거래 생성 시각 (YYYY-MM-DD HH:MM)
          example: "2025-05-31 20:20"
        completedAt:
          type: string
          format: date-time
          description: 거래 완료 시각 (거래 완료 전에는 null)
          nullable: true
          example: "2025-06-01 10:00"
      required:
        - tradeId
        - postId
        - postTitle
        - counterpartId
        - status
        - createdAt

    UserPointsUpdateRequest:
      type: object
      required:
        - amount
      properties:
        amount:
          type: integer
          example: 150

    UserGradeResponse:
      type: object
      properties:
        grade:
          type: string
          example: 초보상인
        points:
          type: integer
          example: 1250

    TradeCreateRequest:
      type: object
      properties:
        post_id:
          type: integer
          description: 거래할 게시글 ID
          example: 123
        receiver_id:
          type: integer
          description: 상대방 유저 ID
          example: 456
        message:
          type: string
          description: (선택) 거래 제안 메시지
          example: "이 물건 거래하고 싶습니다."
      required:
        - post_id
        - receiver_id

    # ──[B] 거래 제안 생성 응답──────────────────────────────────────────────────
    TradeCreateResponse:
      type: object
      properties:
        trade_id:
          type: integer
          description: 생성된 거래 ID
          example: 45
        status:
          type: string
          description: 초기 상태 (PENDING)
          example: "PENDING"
        created_at:
          type: string
          format: date-time
          description: 거래 생성 시각 (YYYY-MM-DD HH:MM)
          example: "2025-06-01 15:00"
      required:
        - trade_id
        - status
        - created_at

    # ──[C] 거래 완료 응답──────────────────────────────────────────────────────
    TradeCompleteResponse:
      type: object
      properties:
        status:
          type: string
          description: 변경된 거래 상태 (COMPLETED)
          example: "COMPLETED"
      required:
        - status

    # ──[D] 거래 리뷰 요청──────────────────────────────────────────────────────
    TradeReviewRequest:
      type: object
      properties:
        rating:
          type: integer
          description: 평점 (1~5)
          example: 5
        comment:
          type: string
          description: 리뷰 코멘트
          example: "신속하고 친절한 거래였습니다."
      required:
        - rating
        - comment

    # ──[E] 거래 리뷰 응답──────────────────────────────────────────────────────
    TradeReviewResponse:
      type: object
      properties:
        review_id:
          type: integer
          description: 생성된 리뷰 ID
          example: 101
      required:
        - review_id
    Success_tradeMessageResponse:
      type: object
      properties:
        message:
          type: string
          description: 성공 메시지
          example: "Trade accepted successfully."
      required:
        - message

    PostCreateRequest:
      type: object
      required:
        - title
        - description
        - category
      properties:
        title:
          type: string
          example: MacBook Pro 2020 판매
        description:
          type: string
          example: 거의 새 제품이며 구성품 모두 포함되어 있습니다.
        category:
          type: string
          example: 전자기기
        thumbnail_image_url:
          type: string
          example: https://example.com/macbook.jpg

    PostResponse:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        category:
          type: string
        user_id:
          type: integer
        created_at:
          type: string
          format: date-time

    PostUpdateRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        category:
          type: string
        thumbnail_image_url:
          type: string


    Chatroom:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        participants:
          type: array
          items:
            type: integer
        related_post_id:
          type: integer
        last_message:
          type: string

    ChatroomCreateRequest:
      type: object
      required:
        - name
        - participantIds
      properties:
        name:
          type: string
        participantIds:
          type: array
          items:
            type: integer
        relatedPostId:
          type: integer

    ChatMessage:
      type: object
      properties:
        id:
          type: integer
        chatroom_id:
          type: integer
        sender_id:
          type: integer
        content:
          type: string
        timestamp:
          type: string
          format: date-time

    ChatMessageSendRequest:
      type: object
      required:
        - sender_id
        - content
      properties:
        sender_id:
          type: integer
        content:
          type: string

    TradePromiseRequest:
      type: object
      required:
        - title
        - location
        - date
        - chatroomId
      properties:
        title:
          type: string
        location:
          type: string
        date:
          type: string
          format: date-time
        chatroomId:
          type: integer

    ValuationPostListResponse:
      type: object
      properties:
        total:
          type: integer
          description: 전체 게시글 수
          example: 25
        page:
          type: integer
          description: 현재 페이지 번호
          example: 1
        per_page:
          type: integer
          description: 페이지당 게시글 수
          example: 10
        posts:
          type: array
          description: 게시글 요약 리스트
          items:
            $ref: "#/components/schemas/ValuationPostSummary"
      required:
        - total
        - page
        - per_page
        - posts

    # ──[B] 게시글 요약 스키마 (리스트 아이템)──────────────────────────────────
    ValuationPostSummary:
      type: object
      properties:
        postId:
          type: integer
          description: 게시글 ID
          example: 123
        title:
          type: string
          description: 게시글 제목
          example: "노트북 중고 팝니다"
        averagePrice:
          type: number
          format: float
          description: 현재까지 유효한 의견들의 평균 가격
          example: 500000.00
        createdAt:
          type: string
          format: date-time
          description: 게시글 생성 시각 (YYYY-MM-DD HH:MM)
          example: "2025-06-01 14:30"
      required:
        - postId
        - title
        - averagePrice
        - createdAt

    # ──[C] 게시글 상세 스키마────────────────────────────────────────────────
    ValuationPostDetail:
      type: object
      properties:
        postId:
          type: integer
          description: 게시글 ID
          example: 123
        title:
          type: string
          description: 게시글 제목
          example: "노트북 중고 팝니다"
        description:
          type: string
          description: 게시글 상세 설명
          example: "최상급 컨디션의 노트북을 저렴하게 팝니다."
        category:
          type: string
          description: 카테고리
          example: "전자기기"
        averagePrice:
          type: number
          format: float
          description: 현재까지 유효한 의견들의 평균 가격
          example: 500000.00
        totalEvaluations:
          type: integer
          description: 유효한 평가(의견) 개수
          example: 5
        createdAt:
          type: string
          format: date-time
          description: 게시글 생성 시각 (YYYY-MM-DD HH:MM)
          example: "2025-06-01 14:30"
      required:
        - postId
        - title
        - description
        - category
        - averagePrice
        - totalEvaluations
        - createdAt

    # ──[D] 게시글 생성 요청 스키마────────────────────────────────────────────
    ValuationPostCreateRequest:
      type: object
      properties:
        title:
          type: string
          description: 게시글 제목
          example: "노트북 중고 팝니다"
        description:
          type: string
          description: 게시글 상세 설명
          example: "최상급 컨디션의 노트북을 저렴하게 팝니다."
        category:
          type: string
          description: 카테고리
          example: "전자기기"
      required:
        - title
        - description
        - category

    # ──[E] 의견 등록 요청 스키마────────────────────────────────────────────
    ValuationOpinionCreateRequest:
      type: object
      properties:
        price:
          type: integer
          description: 게시글에 대한 의견 가격
          example: 480000
      required:
        - price

    # ──[F] 평균 가격 조회 응답 스키마──────────────────────────────────────────
    ValuationAverageResponse:
      type: object
      properties:
        postId:
          type: integer
          description: 게시글 ID
          example: 123
        validCount:
          type: integer
          description: 유효한 의견 개수
          example: 5
        averagePrice:
          type: number
          format: float
          description: 유효한 의견들의 평균 가격
          example: 500000.00
      required:
        - postId
        - validCount
        - averagePrice

    # ──[G] 성공 메시지 공통 응답──────────────────────────────────────────────
    SuccessMessageResponse:
      type: object
      properties:
        msg:
          type: string
          description: 성공 메시지
          example: "게시글 삭제 성공"
      required:
        - msg

    AnalyticsResponse:
      type: object
      properties:
        userId:
          type: integer
          description: 사용자 ID
          example: 42
        totalTrades:
          type: integer
          description: 총 거래 건수
          example: 10
        successfulTrades:
          type: integer
          description: 성공 거래(Completed) 건수
          example: 7
        successRate:
          type: number
          format: float
          description: 성공 거래 비율(퍼센트)
          example: 70.0
        averageRating:
          type: number
          format: float
          description: 해당 사용자가 받은 평균 평점
          example: 4.5
        monthlyTradeCounts:
          type: array
          description: 월별 완료된 거래 건수 리스트
          items:
            type: object
            properties:
              month:
                type: string
                format: date
                description: 연-월 (YYYY-MM 형식)
                example: "2025-05"
              count:
                type: integer
                description: 해당 월에 완료된 거래 수
                example: 3
        monthlyAverageRatings:
          type: array
          description: 월별 평균 평점 리스트
          items:
            type: object
            properties:
              month:
                type: string
                format: date
                description: 연-월 (YYYY-MM 형식)
                example: "2025-05"
              averageRating:
                type: number
                format: float
                description: 해당 월에 계산된 평균 평점
                example: 4.2
      required:
        - userId
        - totalTrades
        - successfulTrades
        - successRate
        - averageRating
        - monthlyTradeCounts
        - monthlyAverageRatings
    UpdateAnalyticsRequest:
      type: object
      properties:
        totalTrades:
          type: integer
          description: 업데이트할 총 거래 건수
          example: 10
        successfulTrades:
          type: integer
          description: 업데이트할 성공 거래 건수
          example: 7
        averageRating:
          type: number
          format: float
          description: 업데이트할 평균 평점
          example: 4.5
      required:
        - totalTrades
        - successfulTrades
        - averageRating
    UpdateAnalyticsResponse:
      type: object
      properties:
        msg:
          type: string
          description: 상태 메시지
          example: "거래 데이터 수동 업데이트 완료"
        userId:
          type: integer
          description: 업데이트된 사용자 ID
          example: 42
        totalTrades:
          type: integer
          description: 업데이트된 총 거래 건수
          example: 10
        successfulTrades:
          type: integer
          description: 업데이트된 성공 거래 건수
          example: 7
        averageRating:
          type: number
          format: float
          description: 업데이트된 평균 평점
          example: 4.5
      required:
        - msg
        - userId
        - totalTrades
        - successfulTrades
        - averageRating

    SearchResultPost:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        category:
          type: string
        created_at:
          type: string
          format: date-time
    
    AdvancedSearchResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        count:
          type: integer
          example: 2
        posts:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 123
              title:
                type: string
                example: 에어팟 프로 중고 팝니다
              user_id:
                type: integer
                example: 1
              category:
                type: string
                example: 전자기기
              created_at:
                type: string
                format: date-time
                example: 2024-06-01

    ErrorResponse:
      type: object
      properties:
        status:
          type: string
          example: error
        msg:
          type: string
          example: 오류 메시지입니다.

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []
